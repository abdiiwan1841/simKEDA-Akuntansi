<?php

function apbd_menu() {
	
	$items['setting/userskpd'] = array (
      'title' => 'Setting User SKPD',
	  'description' => 'Laporan user',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'user_setting_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 12,
      'file' => 'user_setting_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	
	
	$items['angg/delete'] = array (
      'title' => 'Hapus Anggaran',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('angg_delete_form'),
      'access arguments' => array ('access content'),
	  //'access arguments' => array ('access content'),
      'file' => 'angg_delete.php',
      'type' => MENU_NORMAL_ITEM,
    );	
	$items['angg/new'] = array (
      'title' => 'Anggaran Pendapatan', 
	  //'description' => 'Detil Rekening',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'angg_new_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'angg_new_main.php',
      'type' => MENU_NORMAL_ITEM,
    );
	$items['ttdlaporan'] = array (
      'title' => 'Setting Tanda Tangan Laporan',
	  //'description' => 'Laporan ',
	  'page callback' => 'drupal_get_form',
      'page arguments' => array('setting_ttdlaporan_form'),
      //'access arguments' => array ('desa penghapusan'),
	  'access arguments' => array ('access content'),
      'file' => 'ttdlaporan.php',
      'type' => MENU_CALLBACK,
    );	
	//SKPD 
	$items['opd'] = array (
      'title' => 'Daftar OPD',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'opd_main',
      //'access arguments' => array ('access content'),
	  //'access arguments' => array ('jurnal pendapatan pusat'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'opd/opd_main.php',
      'type' => MENU_NORMAL_ITEM,
    );		
	$items['opd/edit'] = array (
      'title' => 'OPD',
	  'description' => 'Laporan user',
	  'title callback' => 'laporan_title_callback',	  
      'page callback' => 'opd_edit_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'opd/opd_edit_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	

	//OPERATOR
	$items['operators'] = array (
      'title' => 'Daftar Operator',
	  'description' => 'Daftar Operator',
	  //'title callback' => 'opt_title_callback',	  
      'page callback' => 'apbdop_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'apbdop/apbdop_main.php',
      'type' => MENU_NORMAL_ITEM,
    );
	$items['operator/edit'] = array (
      'title' => 'Operator',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('apbdop_edit_form'),
      //'access arguments' => array ('desa penghapusan'),
	  'access arguments' => array ('access content'),
      'file' => 'apbdop/apbdop_edit_form.php',
      'type' => MENU_CALLBACK,
    );		
    $items['operator/delete'] = array (
      'title' => 'Hapus Operator',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('apbdop_delete_form'),
      //'access arguments' => array ('desa penghapusan'),
	  'access arguments' => array ('access content'),
      'file' => 'apbdop/apbdop_delete_form.php',
      'type' => MENU_CALLBACK,
    );	

	$items['detilrekening'] = array (
      'title' => 'Detil Rekening',
	  'description' => 'Detil Rekening',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'rekening_detil_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'rekening_detil_main.php',
      'type' => MENU_NORMAL_ITEM,
    );
	
	$items['apbd/chart'] = array (
	  'title' => 'Analisis',
      'page callback' => 'apbd_chart_main',
      'page arguments' => array('apbd_chart_main'),
      'access callback' => 'user_is_logged_in',
      'file' => 'apbd_chart_main.php',
      'type' => MENU_CALLBACK,
	  
    );
	

	$items['reset'] = array (
	  'title' => 'Reset Data',
      'page callback' => 'apbd_resetjurnal_main',
      'page arguments' => array('apbd_resetjurnal_main'),
      'access callback' => 'user_is_logged_in',
      'file' => 'apbd_resetjurnal_main.php',
      'type' => MENU_CALLBACK,
	  
    );
	$items['resetanggaran'] = array (
	  'title' => 'Reset Data',
      'page callback' => 'apbd_resetanggaran_main',
      'page arguments' => array('apbd_resetjurnal_main'),
      'access callback' => 'user_is_logged_in',
      'file' => 'apbd_resetanggaran_main.php',
      'type' => MENU_CALLBACK,
	  
    );

	$items['sikd'] = array (
	  'title' => 'SIKD Permendagri No. 13',
      'page callback' => 'sikd_edit_main',
      'page arguments' => array('sikd_edit_main'),
      'access callback' => 'user_is_logged_in',
      'file' => 'sikd_edit_main.php',
      'type' => MENU_CALLBACK,
	  
    );
	$items['sikdsap'] = array (
	  'title' => 'SIKD Permendagri No. 64 (SAP)',
      'page callback' => 'sikdsap_edit_main',
      'page arguments' => array('sikdsap_edit_main'),
      'access callback' => 'user_is_logged_in',
      'file' => 'sikdsap_edit_main.php',
      'type' => MENU_CALLBACK,
	  
    );

    return $items;
}


function print_pdf_l($output) {
	 
	 $pdf=apbd_pdfd7($output,'L','','Pemerintah Kabupaten Jepara ');
		$title = 'abc.pdf';
		header('Content-Type: application/pdf');
		header('Content-Disposition: inline; filename="'.$title.'"');
		header('Content-Transfer-Encoding: binary');
		header('Content-Length: '.filesize($pdf));
		header('Accept-Ranges: bytes');
		header('Expires: 0');
		header('Cache-Control: public, must-revalidate, max-age=0');  
	  
	  print $pdf;
	  return NULL;	
}
function print_pdf_p($output) {
	 
	 $pdf=apbd_pdfd7($output,'P','<p>&nbsp;<p>','Pemerintah Kabupaten Jepara ');
		$title = 'abc.pdf';
		header('Content-Type: application/pdf');
		header('Content-Disposition: inline; filename="'.$title.'"');
		header('Content-Transfer-Encoding: binary');
		header('Content-Length: '.filesize($pdf));
		header('Accept-Ranges: bytes');
		header('Expires: 0');
		header('Cache-Control: public, must-revalidate, max-age=0');  
	  
	  print $pdf;
	  return NULL;	
}

function apbd_pdfd7($html,$orientation,$header,$footer) {
  // Get the content we want to convert into pdf.
  //theme('tcpdf_example_basic_html');
  $footer=' ';
  /*
  header('Content-Type: application/pdf');
  header('Content-Length: ' . strlen($pdf));
  //header('Content-Disposition: attachment; filename="mydocument.pdf"');
  header('Content-Disposition: inline; filename="mydocument.pdf"');
  // Never make an instance of TCPDF or TCPDFDrupal classes manually.
  // Use tcpdf_get_instance() instead.
  */
	
	/*
	$title = 'abc.pdf';
	header('Content-Type: application/pdf');
	header('Content-Disposition: inline; filename="'.$title.'"');
	header('Content-Transfer-Encoding: binary');
	header('Content-Length: '.filesize($html));
	header('Accept-Ranges: bytes');
	header('Expires: 0');
	header('Cache-Control: public, must-revalidate, max-age=0');  
	*/
	
  $tcpdf = tcpdf_get_instance();
  /* DrupalInitialize() is an extra method added to TCPDFDrupal that initializes
  *  some TCPDF variables (like font types), and makes possible to change the
  *  default header or footer without creating a new class.
  */
  $tcpdf->DrupalInitialize(array(
    'footer' => array(
      'html' => $footer,
    ),
    'header' => array(
	  'html' => $header,
    ),
	'orientation' => $orientation,
  ));
  // Insert the content. Note that DrupalInitialize automaticly adds the first
  // page to the pdf document.
  $tcpdf->writeHTML($html);
  //$tcpdf->Output('example_002.pdf', 'S');

  return $tcpdf->Output('abc.pdf', 'S');
  
  
}

function apbd_ExportPDFx($pageOrientation, $pageSize, $htmlContent, $pdfFiel) {

	$path = libraries_get_path('tcpdf');
	if (($path) && (file_exists($path . '/tcpdf.php'))) {
		require_once($path . '/tcpdf.php');
		require_once($path . '/config/lang/eng.php');
	}
  	set_time_limit(0);
	ini_set('memory_limit', '1024M');

	//require_once('libraries/tcpdf/config/lang/eng.php');
    //require_once('libraries/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $this->Cell(0,0,$this->PageNo(),'T',0,'R');
		}      
	} 
	
    $pdf = new MYPDF($pageOrientation, PDF_UNIT, $pageSize, true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 10));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	
	if ($pageOrientation=='L') {
		$pdf->setHeaderMargin(20);
		//$pdf->SetMargins(5,20);
		$pdf->SetMargins(10,20);
	} else {
		$pdf->setHeaderMargin(10);
		$pdf->SetMargins(20,10);
	}
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 10);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
    $pdf->Output($pdfFiel, 'I');
	
}


function apbd_pdfd7_x($html,$orientation,$header,$footer) {
  // Get the content we want to convert into pdf.
  //theme('tcpdf_example_basic_html');
  /*header('Content-Type: application/pdf');
  header('Content-Length: ' . strlen($pdf));
  header('Content-Disposition: attachment; filename="mydocument.pdf"');*/
  // Never make an instance of TCPDF or TCPDFDrupal classes manually.
  // Use tcpdf_get_instance() instead.
  $tcpdf = tcpdf_get_instance();
  /* DrupalInitialize() is an extra method added to TCPDFDrupal that initializes
  *  some TCPDF variables (like font types), and makes possible to change the
  *  default header or footer without creating a new class.
  */
  $tcpdf->DrupalInitialize(array(
    'footer' => array(
      'html' => $footer,
    ),
    'header' => array(
	  'html' => $header,
    ),
	'orientation' => $orientation,
  ));
  // Insert the content. Note that DrupalInitialize automaticly adds the first
  // page to the pdf document.
  $tcpdf->writeHTML($html);
  //$tcpdf->Output('example_002.pdf', 'S');

  return $tcpdf->Output('', 'S');

  
}

function apbd_fn($num) {

    //return number_format((float)$num, 0, ',', '.');
	
	$x = number_format((float)$num, 0, ',', '.');
	if (substr($x,0,1)=='-' ) $x = '('. substr($x,1) . ')';
	return $x;
}

function apbd_fn2($num) {
    $x = number_format((float)$num, 2, ',', '.');
	if (substr($x,0,1)=='-' ) $x = '('. substr($x,1) . ')';
	
	return $x;

}

function apbd_fn1($num) {
    $x = number_format((float)$num, 1, ',', '.');
	if (substr($x,0,1)=='-' ) $x = '('. substr($x,1) . ')';
	
	return $x;
}

function apbd_fd($dt) {
	if (is_null($dt))
		return '';
	else
		return date('d-m-Y',strtotime($dt));
}

function apbd_fd_long($dt) {
	
	/*if (is_null($dt))
		return '';
	else {
		return t(date('j F Y',strtotime($dt)));
		
		//setlocale (LC_TIME, 'IND');
		//strftime( "%A, %d %B %Y %H:%M", time());
		//return strftime("%d %B %Y", strtotime($dt));
	}*/
	$date=explode('-',$dt);
	$bulanoption=array('Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','November','Desember');
	$bulan=$date[1];
	if(substr($date[1],0,1)==0){
		$bulan=substr($date[1],1,1);
	}
	
	$string=$date[2].' '.$bulanoption[$bulan-1].' '.$date[0];
	return $string;
}

function apbd_render_image() {
	return '[bg|{001C4CEE-D7CA-457F-A877-47F3C9DCB669}| 10 | 150 | random |10 | # 000000]';
}

function apbd_terbilang($x){
	$t = apbd_terbilangx($x);
	if ($t == '' || $t == ' ')
		return '# N.i.h.i.l #';
	else
		return '# ' . $t . ' Rupiah #';
}

function apbd_terbilangx($x){
  $abil = array("", "Satu", "Dua", "Tiga", "Empat", "Lima", "Enam", "Tujuh", "Delapan", "Sembilan", "Sepuluh", "Sebelas");
  if ($x < 12)
    return " " . $abil[$x];
  elseif ($x < 20)
    return apbd_terbilangx($x - 10) . "belas";
  elseif ($x < 100)
    return apbd_terbilangx($x / 10) . " Puluh" . apbd_terbilangx($x % 10);
  elseif ($x < 200)
    return " Seratus" . apbd_terbilangx($x - 100);
  elseif ($x < 1000)
    return apbd_terbilangx($x / 100) . " Ratus" . apbd_terbilangx($x % 100);
  elseif ($x < 2000)
    return " Seribu" . apbd_terbilangx($x - 1000);
  elseif ($x < 1000000)
    return apbd_terbilangx($x / 1000) . " Ribu" . apbd_terbilangx($x % 1000);
  elseif ($x < 1000000000)
    return apbd_terbilangx($x / 1000000) . " Juta" . apbd_terbilangx($x % 1000000);
  elseif ($x < 1000000000000)
    return apbd_terbilangx($x / 1000000000) . " Milyar" . apbd_terbilangx($x % 1000000000);
}

function apbd_format_rek_obyek($rek) {
	return substr_replace($rek, '.', 3, 0);
}

function apbd_format_rek_rincianobyek($rek) {
	$x = substr_replace($rek, '.', 5, 0);
	return substr_replace($x, '.', 3, 0);
}

function apbd_getuseruk() {
	$user =  user_load($GLOBALS['user']->uid);
	
	$x = '';
	$query = db_select('apbdop', 'o');
	$query->fields('o', array('kodeuk'));
	$query->condition('o.username', $user->name, '=');
	$results = $query->execute();
	foreach ($results as $data) {
		$x = $data->kodeuk;
	}
	return $x;	
}

function apbd_hitungpersen($anggaran, $realisasi){
	
	if ($anggaran < 0) 
		$x = ($realisasi/$anggaran)*100;	
	
	else if (($anggaran==NULL) or ($anggaran == 0) or ($anggaran < 0.25))
		if ($realisasi == 0) 	
			$x = 0;
		else 
			$x = ($realisasi/$anggaran)*100;
		
	else
		$x = ($realisasi/$anggaran)*100;
	
	return $x;
}

function apbd_get_dbvalue($val){
	$x = (real) $val;
	return $x;
}

function isSuperuser() {
	$user =  user_load($GLOBALS['user']->uid);
	if (in_array('superuser', $user->roles))
		return true;
	elseif (in_array('auditor', $user->roles))
		return true;
	else
		return (false || isAdministrator());	
}

function isVerifikator() {
	$user =  user_load($GLOBALS['user']->uid);
	if (in_array('superuser', $user->roles))
		return true;
	else
		return (false || isAdministrator());	
}

function isAuditor() {
	$user =  user_load($GLOBALS['user']->uid);
	if (in_array('auditor', $user->roles))
		return true;
	else
		return false;	
}

function isUserSKPD() {
	$user =  user_load($GLOBALS['user']->uid);
	if ((in_array('skpd', $user->roles)) or (in_array('ppkd', $user->roles)))
		return true;
	else 
		return false;
}

function isAdministrator() {
	$user =  user_load($GLOBALS['user']->uid);
	//if (user_access('Administer Nodes', $user))
	//	return true;
	if (in_array('administrator', $user->roles))
		return true;
	else 
		return false;		
}

function apbd_ExportPDF_P($htmlContent, $marginatas, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer 
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $hal1 = $_SESSION["hal1"];
		  if ($hal1=='') 
			  $hal1 = 0;
		  else 
			  $hal1--;
		  $this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. 2019','T',0,'L');
		  $this->Cell(0,0,$this->PageNo() + $hal1,'T',0,'R');
		}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 9));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->setHeaderMargin(10);
	$pdf->SetMargins(20, $marginatas);
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 10);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}


function apbd_ExportPDF_P_Kiri($htmlContent, $marginatas, $marginkiri, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {   
	   // Page footer 
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $hal1 = $_SESSION["hal1"];
		  if ($hal1=='9999') { 
			  $this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. 2019','T',0,'L');
			  $this->Cell(0,0,'','T',0,'R');
		  } else {
			  if ($hal1=='') 
				  $hal1 = 0;
			  else 
				  $hal1--;
			  //$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. 2019','T',0,'L');
			  //$this->Cell(0,0,'2019','T',0,'L');
			  $this->Cell(0,0,$this->PageNo() + $hal1,'T',0,'C');
		  }
		}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 9));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->setHeaderMargin(10);
	$pdf->SetMargins($marginkiri, $marginatas);
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 10);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_ExportPDF_L_Kiri($htmlContent, $marginatas, $marginkiri, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {   
	   // Page footer 
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $hal1 = $_SESSION["hal1"];
		  if ($hal1=='9999') { 
			  $this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. 2019','T',0,'L');
			  $this->Cell(0,0,'','T',0,'R');
		  } else {
			  if ($hal1=='') 
				  $hal1 = 0;
			  else 
				  $hal1--;
			  //$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. 2019','T',0,'L');
			  //$this->Cell(0,0,'2019','T',0,'L');
			  $this->Cell(0,0,$this->PageNo() + $hal1,'T',0,'C');
		  }
		}      
	} 
	
    $pdf = new MYPDF('L', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 9));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->setHeaderMargin(10);
	$pdf->SetMargins($marginkiri, $marginatas);
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 10);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_ExportPDF_L($htmlContent, $marginatas, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $this->Cell(0,0,$this->PageNo(),'T',0,'R');
		}      
	} 
	
    $pdf = new MYPDF('L', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 9));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->setHeaderMargin(10);
	$pdf->SetMargins(20, $marginatas);
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 8);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_ExportPDF_L_Wide($htmlContent, $marginatas, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $this->Cell(0,0,$this->PageNo(),'T',0,'R');
		}      
	} 
	
    $pdf = new MYPDF('L', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 9));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->setHeaderMargin(10);
	$pdf->SetMargins(10, $marginatas);
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 8);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}


function apbd_ExportExcel() {
    //require_once('/files/PHPExcel/Classes/PHPExcel.php');
	require_once('files/PHPExcel/Classes/PHPExcel.php');
    //include PHPExcel library
	require_once ('files/PHPExcel/Classes/PHPExcel/IOFactory.php');

	//load Excel template file
	$objPHPExcel = new PHPExcel();
	$objPHPExcel->getProperties()->setCreator("Maarten Balliauw")
							 ->setLastModifiedBy("Maarten Balliauw")
							 ->setTitle("PHPExcel Test Document")
							 ->setSubject("PHPExcel Test Document")
							 ->setDescription("Test document for PHPExcel, generated using PHP classes.")
							 ->setKeywords("office PHPExcel php")
							 ->setCategory("Test result file");
	$objPHPExcel->setActiveSheetIndex(0)
				->setCellValue('A1', 'Hello')
				->setCellValue('B2', 'world!')
				->setCellValue('C1', 'Hello')
				->setCellValue('D2', 'world!');

	// Miscellaneous glyphs, UTF-8
	$objPHPExcel->setActiveSheetIndex(0)
				->setCellValue('A4', 'Miscellaneous glyphs')
				->setCellValue('A5', 'éàèùâêîôûëïüÿäöüç');
	$objPHPExcel->getActiveSheet()->setCellValue('A8',"Hello\nWorld");
	$objPHPExcel->getActiveSheet()->getRowDimension(8)->setRowHeight(-1);
	$objPHPExcel->getActiveSheet()->getStyle('A8')->getAlignment()->setWrapText(true);


	$value = "-ValueA\n-Value B\n-Value C";
	$objPHPExcel->getActiveSheet()->setCellValue('A10', $value);
	$objPHPExcel->getActiveSheet()->getRowDimension(10)->setRowHeight(-1);
	$objPHPExcel->getActiveSheet()->getStyle('A10')->getAlignment()->setWrapText(true);
	$objPHPExcel->getActiveSheet()->getStyle('A10')->setQuotePrefix(true);
	$objPHPExcel->getActiveSheet()->setTitle('Simple');
	$objPHPExcel->setActiveSheetIndex(0);
	$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
	//ob_clean();
	$filename=mt_rand(1,100000).'.xls'; //just some random filename
	header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
	header("Content-Disposition: attachment; "
			. escape_for_content_disposition("{$report_name} - {$report_type_name} - " . date("Y-m-d.H.i") . ".xlsx")); //.xlsX!
	
	$objWriter->save('php://output');  //send it to user, of course you can save it to disk also!

	exit;
	
}

function apbd_ExportPDF($pageOrientation, $pageSize, $htmlContent, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $this->Cell(0,0,$this->PageNo(),'T',0,'R');
		}      
	} 
	
    $pdf = new MYPDF($pageOrientation, PDF_UNIT, $pageSize, true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 10));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	
	if ($pageOrientation=='L') {
		$pdf->setHeaderMargin(20);
		//$pdf->SetMargins(5,20);
		$pdf->SetMargins(10,20);
	} else {
		$pdf->setHeaderMargin(10);
		$pdf->SetMargins(20,10);
	}
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 10);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_cron() {
	
}

function apbd_messagebox($message) {
  $commands = array();
  $commands[] = ajax_command_alert($message);
  return array('#type' => 'ajax', '#commands' => $commands);
}
 
function apbd_format_tanggal_pendek($sp2dtgl) {
	//drupal_set_message($sp2dtgl);
	//drupal_set_message(strtotime($sp2dtgl));
	$arrtgl=explode('-',$sp2dtgl);
	//$bulanoption=array('Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','November','Desember');
	return $arrtgl[2].'-'.$arrtgl[1].'-'.$arrtgl[0];	
}

function apbd_get_namabulan($bulan) {

	switch ($bulan) {
		case 1:
			$x = 'Januari';
			break;
		case 2:
			$x = 'Februari';
			break;
		case 3:
			$x = 'Maret';
			break;
		case 4:
			$x = 'April';
			break;
		case 5:
			$x = 'Mei';
			break;
		case 6:
			$x = 'Juni';
			break;
		case 7:
			$x = 'Juli';
			break;
		case 8:
			$x = 'Agustus';
			break;
		case 9:
			$x = 'September';
			break;
		case 10:
			$x = 'Oktober';
			break;
		case 11:
			$x = 'November';
			break;
		case 12:
			$x = 'Desember';
			break;
	}

	return $x;
	
} 
//glyphicon glyphicon-check+
//<span class="label label-default">
function apbd_icon_jurnal_sudah() {
	return '<span class="glyphicon glyphicon-check" style="color:green"></span>';
}

function apbd_icon_jurnal_belum() {
	return '<span class="glyphicon glyphicon-file" style="color:orange"></span>';
}

function apbd_icon_prognosis_sudah() {
	return '<span class="glyphicon glyphicon-ok-sign" style="color:green"></span>';
}

function apbd_icon_prognosis_belum() {
	return '<span class="glyphicon glyphicon-remove-sign" style="color:orange"></span>';
}

function apbd_button_baru($link) {
	return l('<span class="glyphicon glyphicon-file" aria-hidden="true"></span> Baru', $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}

function apbd_button_print($link) {
	return l('<span class="glyphicon glyphicon-print" aria-hidden="true"></span> Cetak', $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}

function apbd_button_hapus($link) {
	return l('<span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Hapus', $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}

function apbd_link_esp2d($dokid) {
	//return l('eSP2D', 'http://simkedajepara.web.id/sp2d/default.aspx?dokid=E_SP2D_' . $dokid . '.PDF', array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));

	return l('<strong>eSP2D</strong>',  'http://simkedajepara.web.id/sp2d/default.aspx?dokid=E_SP2D_' . $dokid . '.PDF', array ('html' => true));
}

function apbd_link_cetakjurnal($jurnalid) {

	return l('<strong>Cetak</strong>',  '/laporanjurnal/' . $jurnalid . '/pdf', array ('html' => true));
}


function apbd_button_esp2d($dokid) {
	//return l('<span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>', 'http://simkedajepara.web.id/sp2d/default.aspx?dokid=E_SP2D_' . $dokid . '.PDF', array ('html' => true));
	//return l('eSP2D', 'http://apbdjepara.net/edocs/2017/esp2d/E_SP2D_' . $dokid . '.PDF', array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));

	//return l('eSP2D', 'http://apbdjepara.net/edocs/2017/index.php?sp2d=' . $dokid, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));

	return l('eSP2D', 'http://simkedajepara.web.id/sp2d/default.aspx?dokid=E_SP2D_' . $dokid . '.PDF', array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));
	
}
	

function apbd_button_edok($dokid) {
	//return l('<span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>', '', array ('html' => true));
	return l('ePaper', 'http://simkedajepara.web.id/sp2d/epaper_tidakada.htm', array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-xs btn-block')));
}

function apbd_button_excel($link) {
	return l('<span class="glyphicon glyphicon-list" aria-hidden="true"></span> Excel', $link ,array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}

function apbd_button_bukubesar($link) {
	return l('Buku Besar', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-xs btn-block')));
}

function apbd_button_jurnal($link) {
	return l('Edit', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-xs btn-block')));
}

function apbd_button_kegiatan($link) {
	return l('Kegiatan', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-xs btn-block')));
}

function apbd_button_register($link) {
	return l('Register', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-warning btn-xs btn-block')));;
}
function apbd_button_user($link) {
	return l('Edit Role', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-xs btn-block')));;
}
function apbd_button_sp2d($link) {
	return l('SP2D', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-warning btn-xs btn-block')));

}
function apbd_button_jurnalkan($link) {
	return l('Jurnal', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-warning btn-xs btn-block')));

}
function apbd_button_jurnalitem($link) {
	return l('Rincian', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-warning btn-xs btn-block')));

}

function apbd_button_analisis($link) {
	return l('Analisis', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));
}

function apbd_button_chart($link) {
	return l('<span class="glyphicon glyphicon-stats" aria-hidden="true"></span> Grafis', $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger pull-right')));
}
function apbd_button_tampilkan() {
	return t('<span class="glyphicon glyphicon-search" aria-hidden="true"></span>Tampilkan');
}

function apbd_getkodejurnal($kodeuk) {

	if (isUserSKPD())
		$suffix = 'uk';
	else
		$suffix = '';
	
	//drupal_set_message($suffix);
	
	$query = db_select('jurnal' . $suffix, 'j')->extend('TableSort');
	$query->fields('j', array('jurnalid'));
	$query->condition('j.jurnalid', db_like($kodeuk) . '%', 'LIKE');
	//$query->condition('j.kodeuk', $kodeuk, '=');
	$query->orderBy('j.jurnalid', 'DESC');
	$query->range(0, 1);
	//dpq($query);
	
	# execute the query
	$v=0;
	$results = $query->execute();
	foreach ($results as $data) {
		$v = (int) substr($data->jurnalid,-5);
		//drupal_set_message($data->jurnalid);
	}		
	//drupal_set_message($v);
	$v++;
	$s = '00000' . $v;
	$s = $kodeuk . substr($s, strlen($s)-5);
	return $s;
}

function apbd_getkodejurnal_uk($kodeuk) {
	return apbd_getkodejurnal($kodeuk);

}

function apbd_getsuffixjurnal() {
	if (isUserSKPD())
		$suffix = 'uk';
	else
		$suffix = '';
	
	return $suffix;
	
}

function apbd_getKodeROKasBendaharaPengeluaran() {
	return "11102001";
} 

function apbd_getKodeRORKPPKD() {
	return "31301001";
}

function apbd_getKodeROSAL() {
	return "73101001";
} 

function apbd_getKodeROAPBD() {
	return "11101001";
} 
function apbd_getKodeROBendaharaPenerimaan() {
	return "11103001";
} 
function apbd_getKodeROPiutangDefault() {
	return "11310001";
} 
function apbd_getKodeROBendaharaPengeluaran() {
	return "11102001";
} 
function apbd_getKodeRORPDT() {
	return "11799000";
}
function apbd_getKodeRORADT() {
	return "13999000";
}

function apbd_getKodeROBendaharaPengeluaranBLUD() {
	return "11104001";
} 

function apbd_getKodeROBendaharaPengeluaranBOS() {
	return "11105001";
} 

function apbd_getKodeROBendaharaPenerimaanBLUD() {
	return "11104002";
} 

function apbd_getKodeROBendaharaPenerimaanBOS() {
	return "11105002";
} 

function apbd_tahun() {
	return "2019";
}


function apbd_button_baru_custom_small($link, $caption) {
	return l('<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span> ' . $caption, $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-xs')));
}

function apbd_get_rekening_sap($kodero) {
	$koderosap = '51206001';

	$sql = db_select('rekeningmaplra_apbd', 'rm');
	$sql->fields('rm',array('koderolra'));
	$sql->condition('rm.koderoapbd', $kodero, '=');
	$res = $sql->execute();
	foreach ($res as $datamap) {
		$koderosap = $datamap->koderolra;
	}
	return $koderosap;
}

function apbd_get_rekening_lo($kodero) {
	$koderosap = '51206001';

	$sql = db_select('rekeningmapsap_apbd', 'rm');
	$sql->fields('rm',array('koderosap'));
	$sql->condition('rm.koderoapbd', $kodero, '=');
	
	//dpq ($sql);
	
	$res = $sql->execute();
	foreach ($res as $datamap) {
		$koderosap = $datamap->koderosap;
	}	
	return $koderosap;
}

function apbd_date_convert_form2db($tanggal) {
	//sprintf("%02d", $num)
	$hari = sprintf("%02d", $tanggal['day']);
	$bulan = sprintf("%02d", $tanggal['month']);
	return  $tanggal['year'] . '-' . $bulan . '-' . $hari;
}

function apbd_date_create_currdate_form() {
	return  mktime(0, 0, 0, date('m'), date('d'), apbd_tahun());
}

function apbd_date_create_dateone_form() {
	return  mktime(0, 0, 0, date('m'), 1, apbd_tahun());
}

function createT($header, $row){
	$str='<table class="table table-striped">';
	if(sizeof($header)>0)
		$str.='<thead>';
	for($n=0;$n<sizeof($header);$n++){
		$str.='<tr>';
		for($m=0;$m<sizeof($header[$n]);$m++){
			if(isset($header[$n][$m]['colspan'])){
				$colspan=$header[$n][$m]['colspan'];
			}
			else{
				$colspan='';
			}
			if(isset($header[$n][$m]['rowspan']) && $header[$n][$m]['rowspan']!=null){
				$rowspan=$header[$n][$m]['rowspan'];
			}
			else{
				$rowspan='';
			}
			
			$str.='<th  align="center" rowspan="'.$header[$n][$m]['rowspan'].'" style="'.$header[$n][$m]['style'].'" width="'.$header[$n][$m]['width'].'">' . $header[$n][$m]['data'] . '</th>';
		}
		$str.='</tr>';
		
	}
	if(sizeof($header)>0)
		$str.='</thead>';
	/*
	$str='<table><th><td>a</td>';
	$str.='<td>b</td></th></table>';

	$str.='<td>b</td></th></table>';*/
	for($n=0;$n<sizeof($row);$n++)
	{
		$str.='<tr >';
		for($m=0;$m<sizeof($row[$n]);$m++)
		{
			$str.='<td width="'.$row[$n][$m]['width'].'" style="'.$row[$n][$m]['style'].'" align="'.$row[$n][$m]['align'].'">'.$row[$n][$m]['data'].'</td>';
		}
		$str.='</tr>';
	}
	$str.='</table>';
	return $str;
}

function apbd_bud_jabatan() {
	//$x = variable_get('bud_jabatan', 'BENDAHARA UMUM DAERAH');
	//$x = 'BENDAHARA UMUM DAERAH';
	$x = 'KEPALA BADAN PENGELOLAAN KEUANGAN DAN ASET DAERAH';
	return $x; 
}	

function apbd_bud_nama() {
	//$x = variable_get('bud_nama', 'Drs. ANWAR HARYONO, MM');
	return 'LUKITO SUDI ASMARA, S.H, M.Si';
}	

function apbd_bud_nip() {
	//$x = variable_get('bud_nip', '19580318 198503 1 011');
	return '19640129 199102 1 001';
}	

function createlink($name,$link){
	return '<a href="'.$link.'">'.$name.'</a>';
}

function dateapi_convert_timestamp_to_datetime($timestamp) {

	$date = new DateTime($timestamp);
	//date_timezone_set($date, timezone_open(drupal_get_user_timezone()));
	return date_format($date, 'Y-m-d');
}

function dateapi_convert_datetime_to_timestamp($datetime) {
	
	$date = date_create_from_format('Y-m-d',$datetime,timezone_open(drupal_get_user_timezone()));
	return date_timestamp_get($date);
}

function fixing_double() {
	
	
	drupal_set_message('Fixing...');
	
	$query = db_query('SELECT refid,nobukti FROM jurnalganda ORDER BY refid,nobukti');
	foreach ($query as $data) {
		
		$i = 0;
		
		$spj = 'spj';
		$res = db_query('SELECT jurnalid,refid FROM jurnal WHERE refid=:refid AND jenis=:spj', array(':refid' => $data->refid, ':spj'=>$spj));
		foreach ($res as $data_jurnal) {
			
			$i++;
			if ($i>1) {
				$x = db_insert('jurnaldel') // Table name no longer needs {}
						->fields(array(
						  'jurnalid' => $data_jurnal->jurnalid,
						  'refid' => $data_jurnal->refid,
				))
				//dpq($query);
				->execute();				
			}	
			
		}
	}	

}

function fixing_double_uk() {
	
	
	drupal_set_message('Fixing...');
	
	$query = db_query('SELECT refid,nobukti FROM jurnalganda ORDER BY refid,nobukti');
	foreach ($query as $data) {
		
		$i = 0;
		
		$spj = 'spj';
		$res = db_query('SELECT jurnalid,refid FROM jurnaluk WHERE refid=:refid AND jenis=:spj', array(':refid' => $data->refid, ':spj'=>$spj));
		foreach ($res as $data_jurnal) {
			
			$i++;
			if ($i>1) {
				$x = db_insert('jurnaldel') // Table name no longer needs {}
						->fields(array(
						  'jurnalid' => $data_jurnal->jurnalid,
						  'refid' => $data_jurnal->refid,
				))
				//dpq($query);
				->execute();				
			}	
			
		}
	}	

}